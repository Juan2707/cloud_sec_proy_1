{"ast":null,"code":"var _jsxFileName = \"C:\\\\2025\\\\seguridad cloud\\\\ProyectoSecCloud1\\\\blog_platform_front\\\\src\\\\views\\\\Feed\\\\Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Post from '../../components/Post';\n//Aqui iria el import de la api\nimport { get_all_public_posts, get_my_user, get_all_tags, get_posts_by_tags } from '../../services/Api';\nimport { useAuth } from '../../components/AuthContext';\nimport Tag from '../../components/Tag';\nimport { getRemovedTags, getSelectedTags, clearRemovedTags, clearSelectedTags } from '../../services/DataInterface';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [trigger, setTrigger] = useState(false);\n  const [user_id, setUser_id] = useState('');\n  const [tags, setTags] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  useEffect(() => {\n    console.log(\"Selected Tags\", getSelectedTags());\n    console.log(\"Removed tags\", getRemovedTags());\n    const cargarTags = async () => {\n      try {\n        const data = await get_all_tags(user.access_token);\n        setTags(data.data);\n      } catch (error) {\n        console.error('Error fetching tags', error);\n        if (error.response.status === 401) {\n          navigate('/login');\n        }\n      }\n    };\n    cargarTags();\n    const cargarPosts = async () => {\n      try {\n        setSelectedTags(getSelectedTags());\n        let data;\n        if (selectedTags.length > 0) {\n          const response = await get_posts_by_tags(selectedTags, user.access_token);\n          if (response.error) throw new Error(\"Failed to fetch posts\");\n          data = response.data;\n          setPosts(data || []); // Asumir que podría no haber datos.\n        } else {\n          const response = await get_all_public_posts(user.access_token);\n          if (response.error) throw new Error(\"Failed to fetch public posts\");\n          data = response.data;\n          setPosts(data || []);\n        }\n        const userInfoResponse = await get_my_user(user.access_token);\n        if (userInfoResponse.error) throw new Error(\"Failed to fetch user info\");\n        const userInfo = userInfoResponse.data;\n        setUser_id(userInfo.id);\n      } catch (error) {\n        console.error('Error fetching data', error);\n        if (error.response && error.response.status === 401) {\n          navigate('/login');\n        } else {\n          // Añade manejo de otros tipos de errores, posiblemente mostrando un mensaje al usuario.\n          alert(\"An error occurred while fetching data.\");\n        }\n      }\n    };\n    cargarPosts();\n  }, [trigger]);\n  //Revisar post conexion con api, el delete es con backend, debe haber una forma de solo hacer refresh de la pagina\n\n  const refresh = () => {\n    setTrigger(!trigger);\n  };\n  const onClickButton = route => {\n    clearRemovedTags();\n    clearSelectedTags();\n    navigate(route);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n      ...tag,\n      onChange: refresh\n    }, tag.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickButton(`/myprofile/${user_id}`),\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      data: post,\n      onRefresh: refresh\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickButton('/create'),\n      children: \"Crear Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"83f7fyFhRenalLhjrfqJzHZA2aY=\", false, function () {\n  return [useLocation, useAuth, useNavigate];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Post","get_all_public_posts","get_my_user","get_all_tags","get_posts_by_tags","useAuth","Tag","getRemovedTags","getSelectedTags","clearRemovedTags","clearSelectedTags","jsxDEV","_jsxDEV","Feed","_s","location","user","navigate","posts","setPosts","trigger","setTrigger","user_id","setUser_id","tags","setTags","selectedTags","setSelectedTags","console","log","cargarTags","data","access_token","error","response","status","cargarPosts","length","Error","userInfoResponse","userInfo","id","alert","refresh","onClickButton","route","children","map","tag","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","post","onRefresh","_c","$RefreshReg$"],"sources":["C:/2025/seguridad cloud/ProyectoSecCloud1/blog_platform_front/src/views/Feed/Feed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Post from '../../components/Post';\r\n//Aqui iria el import de la api\r\nimport { get_all_public_posts, get_my_user, get_all_tags, get_posts_by_tags } from '../../services/Api';\r\nimport { useAuth } from '../../components/AuthContext';\r\nimport Tag from '../../components/Tag';\r\nimport { getRemovedTags, getSelectedTags, clearRemovedTags, clearSelectedTags } from '../../services/DataInterface';\r\n\r\n\r\n\r\nfunction Feed() {\r\n  const location = useLocation();\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n  const [trigger, setTrigger] = useState(false);\r\n  const [user_id, setUser_id] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n  useEffect(() =>{\r\n    console.log(\"Selected Tags\",getSelectedTags())\r\n    console.log(\"Removed tags\",getRemovedTags())\r\n    const cargarTags = async() =>{\r\n      try{\r\n        const data = await get_all_tags(user.access_token);\r\n        setTags(data.data);\r\n      }\r\n      catch(error){\r\n        console.error('Error fetching tags', error);\r\n        if(error.response.status === 401){\r\n          navigate('/login');\r\n        }\r\n      }\r\n    }\r\n    cargarTags();\r\n    const cargarPosts = async() => {\r\n      try {\r\n        setSelectedTags(getSelectedTags());\r\n        let data;\r\n        if (selectedTags.length > 0) {\r\n          const response = await get_posts_by_tags(selectedTags, user.access_token);\r\n          if (response.error) throw new Error(\"Failed to fetch posts\");\r\n          data = response.data;\r\n          setPosts(data || []); // Asumir que podría no haber datos.\r\n        } else {\r\n          const response = await get_all_public_posts(user.access_token);\r\n          if (response.error) throw new Error(\"Failed to fetch public posts\");\r\n          data = response.data;\r\n          setPosts(data || []);\r\n        }\r\n    \r\n        const userInfoResponse = await get_my_user(user.access_token);\r\n        if (userInfoResponse.error) throw new Error(\"Failed to fetch user info\");\r\n        const userInfo = userInfoResponse.data;\r\n        setUser_id(userInfo.id);\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n        if (error.response && error.response.status === 401) {\r\n          navigate('/login');\r\n        } else {\r\n          // Añade manejo de otros tipos de errores, posiblemente mostrando un mensaje al usuario.\r\n          alert(\"An error occurred while fetching data.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    cargarPosts();\r\n  },[trigger]);\r\n  //Revisar post conexion con api, el delete es con backend, debe haber una forma de solo hacer refresh de la pagina\r\n\r\n  const refresh = () =>{\r\n    setTrigger(!trigger);\r\n  }\r\n\r\n  const onClickButton= (route)=>{\r\n    clearRemovedTags();\r\n    clearSelectedTags();\r\n    navigate(route);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      {tags.map(tag => (\r\n          <Tag key={tag.id} {...tag} onChange={refresh}/>\r\n        ))}\r\n      <button onClick={() => onClickButton(`/myprofile/${user_id}`)}>My Profile</button>\r\n      <h1>Feed</h1>\r\n      {posts.map((post) => (\r\n        <Post key={post.id} data={post} onRefresh={refresh}/>\r\n      ))}\r\n      <button onClick={() => onClickButton('/create')}>Crear Post</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}