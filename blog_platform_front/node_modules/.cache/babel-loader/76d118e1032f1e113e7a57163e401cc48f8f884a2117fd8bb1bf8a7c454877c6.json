{"ast":null,"code":"var _jsxFileName = \"C:\\\\2025\\\\seguridad cloud\\\\ProyectoSecCloud1\\\\blog_platform_front\\\\src\\\\components\\\\DetailedPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { get_tags_by_post, get_my_calification_on_post, get_user, get_single_post } from '../services/Api';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useAuth } from '../components/AuthContext';\nimport NonEditableTag from './NonEditableTag';\nimport Calificate from './Calificate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DetailedPost() {\n  _s();\n  const {\n    post_id\n  } = useParams(); // Asegúrate de usar useParams para obtener post_id\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [data, setData] = useState({});\n  const [username, setUsername] = useState('');\n  const [tags, setTags] = useState([]);\n  const [myCalification, setMyCalification] = useState(0);\n  const [calification_id, setCalification_id] = useState(0);\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const postData = await get_single_post(post_id, user.access_token);\n        if (postData.error) {\n          console.error('Error fetching post', postData.error);\n          return;\n        }\n        setData(postData.data);\n        setUsername((await get_user(postData.data.author_id, user.access_token)).data.username);\n        setTags((await get_tags_by_post(post_id, user.access_token)).data);\n        const calData = await get_my_calification_on_post(post_id, user.access_token);\n        if (calData.data.length === 0) {\n          setMyCalification(-1);\n        } else {\n          setMyCalification(calData.data[0].calification);\n          setCalification_id(calData.data[0].id);\n        }\n      } catch (error) {\n        var _error$response;\n        console.error('Error fetching data', error);\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n          navigate('/login');\n        }\n      }\n    }\n    fetchData();\n  }, [post_id, user.access_token, navigate, refresh]); // Use refresh as a trigger for re-fetching\n\n  const onRefresh = () => {\n    setRefresh(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: [\"By \", username, \" on \", data.publication_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"With Calification \", data.avg_calification, \" of \", data.amount_califications, \" users\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), tags.map(tag => /*#__PURE__*/_jsxDEV(NonEditableTag, {\n      name: tag.name,\n      isSelected: false\n    }, tag.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Calification is \", myCalification]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calificate, {\n      myCalification: myCalification,\n      token: user.access_token,\n      post_id: post_id,\n      onChange: onRefresh,\n      calification_id: calification_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/postDetail'),\n      children: \"Detalles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailedPost, \"ZjUUkK0ZhdjTFWU7brdBgSwf7JA=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = DetailedPost;\nexport default DetailedPost;\nvar _c;\n$RefreshReg$(_c, \"DetailedPost\");","map":{"version":3,"names":["React","useState","useEffect","get_tags_by_post","get_my_calification_on_post","get_user","get_single_post","useNavigate","useParams","useAuth","NonEditableTag","Calificate","jsxDEV","_jsxDEV","DetailedPost","_s","post_id","user","navigate","data","setData","username","setUsername","tags","setTags","myCalification","setMyCalification","calification_id","setCalification_id","refresh","setRefresh","fetchData","postData","access_token","error","console","author_id","calData","length","calification","id","_error$response","response","status","onRefresh","prev","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","publication_date","avg_calification","amount_califications","map","tag","name","isSelected","token","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/2025/seguridad cloud/ProyectoSecCloud1/blog_platform_front/src/components/DetailedPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { get_tags_by_post, get_my_calification_on_post, get_user, get_single_post } from '../services/Api';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useAuth } from '../components/AuthContext';\r\nimport NonEditableTag from './NonEditableTag';\r\nimport Calificate from './Calificate';\r\n\r\nfunction DetailedPost() {\r\n  const { post_id } = useParams(); // Asegúrate de usar useParams para obtener post_id\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState({});\r\n  const [username, setUsername] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [myCalification, setMyCalification] = useState(0);\r\n  const [calification_id, setCalification_id] = useState(0);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const postData = await get_single_post(post_id, user.access_token);\r\n        if (postData.error) {\r\n          console.error('Error fetching post', postData.error);\r\n          return;\r\n        }\r\n        setData(postData.data);\r\n        setUsername((await get_user(postData.data.author_id, user.access_token)).data.username);\r\n        setTags((await get_tags_by_post(post_id, user.access_token)).data);\r\n        const calData = await get_my_calification_on_post(post_id, user.access_token);\r\n        if (calData.data.length === 0) {\r\n          setMyCalification(-1);\r\n        } else {\r\n          setMyCalification(calData.data[0].calification);\r\n          setCalification_id(calData.data[0].id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data', error);\r\n        if (error.response?.status === 401) {\r\n          navigate('/login');\r\n        }\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [post_id, user.access_token, navigate, refresh]); // Use refresh as a trigger for re-fetching\r\n\r\n  const onRefresh = () => {\r\n    setRefresh(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{data.title}</h2>\r\n      <p>{data.content}</p>\r\n      <small>By {username} on {data.publication_date}</small>\r\n      <h2>With Calification {data.avg_calification} of {data.amount_califications} users</h2>\r\n      <h2>Tags</h2>\r\n      {tags.map((tag) => (\r\n        <NonEditableTag key={tag.id} name={tag.name} isSelected={false} />\r\n      ))}\r\n      <h2>Your Calification is {myCalification}</h2>\r\n      <Calificate myCalification={myCalification} token={user.access_token} post_id={post_id} onChange={onRefresh} calification_id={calification_id}/>\r\n      <button onClick={() => navigate('/postDetail')}>Detalles</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailedPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}