{"ast":null,"code":"var _jsxFileName = \"C:\\\\2025\\\\seguridad cloud\\\\ProyectoSecCloud1\\\\blog_platform_front\\\\src\\\\components\\\\DetailedPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { get_tags_by_post, get_my_calification_on_post, get_user, get_single_post } from '../services/Api';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../components/AuthContext';\nimport NonEditableTag from './NonEditableTag';\nimport Calificate from './Calificate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DetailedPost({\n  post_id\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const {\n    user\n  } = useAuth();\n  const [tags, setTags] = useState([]);\n  const [data, setData] = useState({});\n  const [myCalification, setMyCalification] = useState(0);\n  const navigate = useNavigate();\n  const [calification_id, setCalification_id] = useState(0);\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    const cargarPost = async () => {\n      try {\n        const data = await get_single_post(post_id, user.access_token);\n        if (data.error) {\n          console.error('Error fetching post', data.error);\n          return;\n        }\n        setData(data.data);\n      } catch (error) {\n        console.error('Error fetching post', error);\n        if (error.response.status === 401) {\n          navigate('/login');\n        }\n      }\n    };\n    cargarPost();\n    const cargarTags = async () => {\n      try {\n        const data1 = await get_tags_by_post(data.id, user.access_token);\n        if (data1.error) {\n          setTags([]);\n          console.error('Error fetching tags', data1.error);\n          return;\n        } else {\n          setTags(data1.data);\n        }\n        const get_username = await get_user(data.author_id, user.access_token);\n        setUsername(get_username.data.username);\n      } catch (error) {\n        console.error('Error fetching tags', error);\n        setTags([]);\n        if (error.response.status === 401) {\n          navigate('/login');\n        }\n      }\n    };\n    const cargarCalification = async () => {\n      try {\n        const data2 = await get_my_calification_on_post(data.id, user.access_token);\n        //data2.data es un arreglo con un solo elemento o ninguno. Si no hay calificación se pone \"-1\"\n        if (data2.data.length === 0) {\n          setMyCalification(-1);\n          return;\n        } else {\n          setMyCalification(data2.data[0].calification);\n          setCalification_id(data2.data[0].id);\n        }\n      } catch (error) {\n        console.error('Error fetching calification', error);\n        if (error.response.status === 401) {\n          navigate('/login');\n        }\n      }\n    };\n    cargarTags();\n    cargarCalification();\n  }, [onRefresh]);\n  const onRefresh = () => {\n    setRefresh(!refresh);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: [\"By \", username, \" on \", data.publication_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"With Calification \", data.avg_calification, \" of \", data.amount_califications, \" users\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), tags.map(tag => /*#__PURE__*/_jsxDEV(NonEditableTag, {\n      name: tag.name,\n      isSelected: false\n    }, tag.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your Calification is \", myCalification]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calificate, {\n      myCalification: myCalification,\n      token: user.access_token,\n      post_id: data.id,\n      onChange: onRefresh,\n      calification_id: calification_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/postDetail'),\n      children: \"Detalles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailedPost, \"v6iwePoJyI+QWg0BTKGw77mWyOE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = DetailedPost;\nexport default DetailedPost;\nvar _c;\n$RefreshReg$(_c, \"DetailedPost\");","map":{"version":3,"names":["React","useState","useEffect","get_tags_by_post","get_my_calification_on_post","get_user","get_single_post","useNavigate","useAuth","NonEditableTag","Calificate","jsxDEV","_jsxDEV","DetailedPost","post_id","_s","username","setUsername","user","tags","setTags","data","setData","myCalification","setMyCalification","navigate","calification_id","setCalification_id","refresh","setRefresh","cargarPost","access_token","error","console","response","status","cargarTags","data1","id","get_username","author_id","cargarCalification","data2","length","calification","onRefresh","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","publication_date","avg_calification","amount_califications","map","tag","name","isSelected","token","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/2025/seguridad cloud/ProyectoSecCloud1/blog_platform_front/src/components/DetailedPost.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { get_tags_by_post, get_my_calification_on_post, get_user, get_single_post } from '../services/Api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../components/AuthContext';\r\nimport NonEditableTag from './NonEditableTag';\r\nimport Calificate from './Calificate';\r\nfunction DetailedPost({post_id }) {\r\n  const [username, setUsername] = useState('');\r\n  const { user } = useAuth();\r\n  const [tags, setTags] = useState([]);\r\n  const [data, setData] = useState({});\r\n  const [myCalification, setMyCalification] = useState(0);\r\n  const navigate = useNavigate();\r\n  const [calification_id, setCalification_id] = useState(0);\r\n  const [refresh, setRefresh] = useState(false);\r\n  useEffect(() =>{\r\n    const cargarPost = async() =>{\r\n        try{\r\n            const data = await get_single_post(post_id, user.access_token);\r\n            if(data.error){\r\n                console.error('Error fetching post', data.error);\r\n                return;\r\n            }\r\n            setData(data.data);\r\n        }\r\n        catch(error){\r\n            console.error('Error fetching post', error);\r\n            if(error.response.status === 401){\r\n                navigate('/login');\r\n            }\r\n        }\r\n    };\r\n    cargarPost();\r\n    const cargarTags = async() =>{\r\n      try{\r\n        const data1 = await get_tags_by_post(data.id, user.access_token);\r\n        if(data1.error){\r\n          setTags([]);\r\n          console.error('Error fetching tags', data1.error);\r\n          return;\r\n        }\r\n        else{\r\n          setTags(data1.data);\r\n        }\r\n        \r\n        const get_username = await get_user(data.author_id, user.access_token);\r\n        setUsername(get_username.data.username);\r\n      }\r\n      catch(error){\r\n        console.error('Error fetching tags', error);\r\n        setTags([]);\r\n        if(error.response.status === 401){\r\n          navigate('/login');\r\n        }\r\n      }\r\n    };\r\n    const cargarCalification = async() =>{\r\n      try{\r\n        const data2 = await get_my_calification_on_post(data.id, user.access_token);\r\n        //data2.data es un arreglo con un solo elemento o ninguno. Si no hay calificación se pone \"-1\"\r\n        if(data2.data.length === 0){\r\n          setMyCalification(-1);\r\n          return;\r\n        }\r\n        else{\r\n          setMyCalification(data2.data[0].calification);\r\n          setCalification_id(data2.data[0].id);\r\n        }\r\n      }\r\n      catch(error){\r\n        console.error('Error fetching calification', error);\r\n        if(error.response.status === 401){\r\n          navigate('/login');\r\n        }\r\n      }\r\n    };\r\n    cargarTags();\r\n    cargarCalification();\r\n  },[onRefresh]);\r\n\r\n  const onRefresh = () => {\r\n    setRefresh(!refresh);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{data.title}</h2>\r\n      <p>{data.content}</p>\r\n      <small>By {username} on {data.publication_date}</small>\r\n      <h2>With Calification {data.avg_calification} of {data.amount_califications} users</h2>\r\n      <h2>Tags</h2>\r\n      {tags.map((tag) => (\r\n        <NonEditableTag key={tag.id} name={tag.name} isSelected ={false} />\r\n      ))}\r\n      <h2>Your Calification is {myCalification}</h2>\r\n      <Calificate myCalification={myCalification} token={user.access_token} post_id={data.id} onChange={onRefresh} calification_id={calification_id}/>\r\n      <button onClick={() => navigate('/postDetail')}>Detalles</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailedPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}