{"ast":null,"code":"const BASE_URL = \"http://127.0.0.1:8000\";\nexport const register = async (email, username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/user`, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        username: username,\n        password: password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Error en el registro');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error en el registro', error);\n    throw error;\n  }\n};\nexport const login = async (email, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/token`, {\n      method: 'POST',\n      //aqui el body es x-www-form-urlencoded con Key username y Key password con los valores necesarios para el login\n      body: JSON.stringify({\n        email: email,\n        password: password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Error en el login');\n    }\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    return data;\n  } catch (error) {\n    console.error('Error en el login', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","register","email","username","password","response","fetch","method","body","JSON","stringify","headers","ok","Error","data","json","error","console","login","localStorage","setItem","token"],"sources":["C:/2025/seguridad cloud/ProyectoSecCloud1/blog_platform_front/src/services/Api.js"],"sourcesContent":["const BASE_URL = \"http://127.0.0.1:8000\";\r\n\r\nexport const register =  async (email, username, password) => {\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/user`,{\r\n            method: 'POST',\r\n            body: JSON.stringify({email:email, username:username, password:password}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if(!response.ok){\r\n            throw new Error('Error en el registro');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    catch(error){\r\n        console.error('Error en el registro', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n    try{\r\n        const response = await fetch(`${BASE_URL}/token`,{\r\n            method: 'POST',\r\n            //aqui el body es x-www-form-urlencoded con Key username y Key password con los valores necesarios para el login\r\n            body: JSON.stringify({email:email, password:password}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        if(!response.ok){\r\n            throw new Error('Error en el login');\r\n        }\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        return data;\r\n    } catch(error){\r\n        console.error('Error en el login', error);\r\n        throw error;\r\n    }\r\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,QAAQ,GAAI,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC1D,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,OAAO,EAAC;MAC5CO,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK,EAACA,KAAK;QAAEC,QAAQ,EAACA,QAAQ;QAAEC,QAAQ,EAACA;MAAQ,CAAC,CAAC;MACzEO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;MACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CACD,OAAME,KAAK,EAAC;IACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOhB,KAAK,EAAEE,QAAQ,KAAK;EAC5C,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,QAAQ,EAAC;MAC7CO,MAAM,EAAE,MAAM;MACd;MACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK,EAACA,KAAK;QAAEE,QAAQ,EAACA;MAAQ,CAAC,CAAC;MACtDO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;MACZ,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;IACxC;IACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,KAAK,CAAC;IACzC,OAAOP,IAAI;EACf,CAAC,CAAC,OAAME,KAAK,EAAC;IACVC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}